---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/posts/{post_id}/comments.json":
    post:
      summary: Creates a comment for a given post
      tags:
      - Comments
      security:
      - Bearer: []
      parameters:
      - name: post_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  author_id:
                    type: number
                  post_id:
                    type: number
                  text:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
    get:
      summary: Retrieves all comments for a given post
      tags:
      - Comments
      parameters:
      - name: post_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Comments retrieved for the given post
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  author_id:
                    type: number
                  post_id:
                    type: number
                  text:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/users/sign_in.json":
    post:
      summary: Logs in user
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: Logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  "/users/{user_id}/posts.json":
    get:
      summary: Retrieves all posts for a given user
      tags:
      - Posts
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Posts retrieved for the given user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  author_id:
                    type: number
                  title:
                    type: string
                  text:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  comments_counter:
                    type: number
                  likes_counter:
                    type: number
                required:
                - title
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
tags:
- name: Login
